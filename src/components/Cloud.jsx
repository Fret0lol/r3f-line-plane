/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 .\public\models\cloud_11.glb
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Cloud({opacity, ...props}) {
  const { nodes, materials } = useGLTF('./models/cloud.glb')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.cloudball001.geometry} material={nodes.cloudball001.material}>
        <meshStandardMaterial onBeforeCompile={(shader) => {
          shader.fragmentShader = shader.fragmentShader.replace(`vec4 diffuseColor = vec4( diffuse, opacity);`, 
          `
          float fadeDist = 200.0;
          float dist = length(vViewPosition);

          float fadeOpacity = smoothstep(fadeDist, 0.0, dist);
          vec4 diffuseColor = vec4( diffuse, fadeOpacity * ${opacity});`)
        }} envMapIntensity={2} transparent opacity={opacity}></meshStandardMaterial>
      </mesh>
    </group>
  )
}

useGLTF.preload('./models/cloud.glb')
